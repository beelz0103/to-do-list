(()=>{"use strict";var n={426:(n,e,t)=>{t.d(e,{Z:()=>c});var o=t(537),r=t.n(o),a=t(645),i=t.n(a)()(r());i.push([n.id,"body {   \n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  display: grid;    \n  grid-template-columns: 250px 1fr; \n  grid-template-rows: 80px 1fr 50px;  \n}\n\n#header{\n  background-color: lightblue;\n  grid-column: 1/-1;\n}\n\n.taskdiv {\n  margin: 5px;\n  width: 500px;\n  display: flex;\n  gap: 20px;\n  background-color: white;\n  border: 1px solid black;\n}\n\n\n#sidebar {  \n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n  padding-left: 30px;\n}\n\n#content{\n  overflow:auto;\n  background-color: khaki;\n}\n\n#footer {\n  background-color: #86273c;\n  grid-column: 1/-1;\n}\n\n#project-container {\n  background-color: lightcoral;\n  overflow: auto;\n  margin:10px;\n  height:300px;\n}\n\nbutton {\n  width: 100px;\n}\n\n.modal-form {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  visibility: hidden;\n  transform: scale(1.1);\n  transition: visibility 0s linear 0.25s, opacity 0.25s 0s, transform 0.25s;\n}\n\n#modal-formcontainer {\n  display: flex;\n  flex-direction: column;\n  gap:10px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #F6F7F8;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n}\n\n.show-modal {\n  opacity: 1;\n  visibility: visible;\n  transform: scale(1.0);\n  transition: visibility 0s linear 0s, opacity 0.25s 0s, transform 0.25s;\n}\n\n#book_closebutton {  \n  cursor: pointer;\n}\n\n#formheader {\n  font-size: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n}\n\n\n.speaker-form-header,\n.speaker-form {\nwidth: 300px;\n}\n\n.form-row {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n}\n\n.form-row input[type='text'], .form-row input[type='number'] {\n  background-color: #FFFFFF;\n  border: 1px solid #D6D9DC;\n  border-radius: 3px;\n  width: 300;\n  padding: 7px;\n  font-size: 14px;\n}\n\n.form-row label {\n  margin-bottom: 5px;\n}\n\n.book_checkbox {\n  display: flex;\n  align-self: center;\n  gap:10px;\n}\n\n.makeTaskGrayed {\n  background-color: lightgray;\n}\n\n#formbody {\n  display: flex;\n  flex-direction: column;\n}\n\n#create-task {\n  align-self: center;\n  margin: 5px;\n  width: 125px;\n  height: 40px;\n  font-size: 1rem;\n  font-weight: bolder;\n  background-color: #4CAF50;\n  border: 1px solid green;\n  border-radius: 10px;    \n}\n\n#book_createbook:hover {\n  box-shadow: 2px 2px #337735; \n}","",{version:3,sources:["webpack://./src/style.css"],names:[],mappings:"AAAA;EACE,aAAa;EACb,SAAS;EACT,UAAU;EACV,aAAa;EACb,gCAAgC;EAChC,iCAAiC;AACnC;;AAEA;EACE,2BAA2B;EAC3B,iBAAiB;AACnB;;AAEA;EACE,WAAW;EACX,YAAY;EACZ,aAAa;EACb,SAAS;EACT,uBAAuB;EACvB,uBAAuB;AACzB;;;AAGA;EACE,aAAa;EACb,sBAAsB;EACtB,SAAS;EACT,eAAe;EACf,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,uBAAuB;AACzB;;AAEA;EACE,yBAAyB;EACzB,iBAAiB;AACnB;;AAEA;EACE,4BAA4B;EAC5B,cAAc;EACd,WAAW;EACX,YAAY;AACd;;AAEA;EACE,YAAY;AACd;;AAEA;EACE,eAAe;EACf,OAAO;EACP,MAAM;EACN,WAAW;EACX,YAAY;EACZ,oCAAoC;EACpC,UAAU;EACV,kBAAkB;EAClB,qBAAqB;EACrB,yEAAyE;AAC3E;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,QAAQ;EACR,kBAAkB;EAClB,QAAQ;EACR,SAAS;EACT,gCAAgC;EAChC,yBAAyB;EACzB,oBAAoB;EACpB,qBAAqB;AACvB;;AAEA;EACE,UAAU;EACV,mBAAmB;EACnB,qBAAqB;EACrB,sEAAsE;AACxE;;AAEA;EACE,eAAe;AACjB;;AAEA;EACE,eAAe;EACf,aAAa;EACb,8BAA8B;EAC9B,mBAAmB;EACnB,iBAAiB;AACnB;;;AAGA;;AAEA,YAAY;AACZ;;AAEA;EACE,aAAa;EACb,sBAAsB;EACtB,mBAAmB;AACrB;;AAEA;EACE,yBAAyB;EACzB,yBAAyB;EACzB,kBAAkB;EAClB,UAAU;EACV,YAAY;EACZ,eAAe;AACjB;;AAEA;EACE,kBAAkB;AACpB;;AAEA;EACE,aAAa;EACb,kBAAkB;EAClB,QAAQ;AACV;;AAEA;EACE,2BAA2B;AAC7B;;AAEA;EACE,aAAa;EACb,sBAAsB;AACxB;;AAEA;EACE,kBAAkB;EAClB,WAAW;EACX,YAAY;EACZ,YAAY;EACZ,eAAe;EACf,mBAAmB;EACnB,yBAAyB;EACzB,uBAAuB;EACvB,mBAAmB;AACrB;;AAEA;EACE,2BAA2B;AAC7B",sourcesContent:["body {   \n  height: 100vh;\n  margin: 0;\n  padding: 0;\n  display: grid;    \n  grid-template-columns: 250px 1fr; \n  grid-template-rows: 80px 1fr 50px;  \n}\n\n#header{\n  background-color: lightblue;\n  grid-column: 1/-1;\n}\n\n.taskdiv {\n  margin: 5px;\n  width: 500px;\n  display: flex;\n  gap: 20px;\n  background-color: white;\n  border: 1px solid black;\n}\n\n\n#sidebar {  \n  display: flex;\n  flex-direction: column;\n  gap: 10px;\n  font-size: 20px;\n  padding-left: 30px;\n}\n\n#content{\n  overflow:auto;\n  background-color: khaki;\n}\n\n#footer {\n  background-color: #86273c;\n  grid-column: 1/-1;\n}\n\n#project-container {\n  background-color: lightcoral;\n  overflow: auto;\n  margin:10px;\n  height:300px;\n}\n\nbutton {\n  width: 100px;\n}\n\n.modal-form {\n  position: fixed;\n  left: 0;\n  top: 0;\n  width: 100%;\n  height: 100%;\n  background-color: rgba(0, 0, 0, 0.5);\n  opacity: 0;\n  visibility: hidden;\n  transform: scale(1.1);\n  transition: visibility 0s linear 0.25s, opacity 0.25s 0s, transform 0.25s;\n}\n\n#modal-formcontainer {\n  display: flex;\n  flex-direction: column;\n  gap:10px;\n  position: absolute;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  background-color: #F6F7F8;\n  padding: 1rem 1.5rem;\n  border-radius: 0.5rem;\n}\n\n.show-modal {\n  opacity: 1;\n  visibility: visible;\n  transform: scale(1.0);\n  transition: visibility 0s linear 0s, opacity 0.25s 0s, transform 0.25s;\n}\n\n#book_closebutton {  \n  cursor: pointer;\n}\n\n#formheader {\n  font-size: 24px;\n  display: flex;\n  justify-content: space-between;\n  align-items: center;\n  font-weight: bold;\n}\n\n\n.speaker-form-header,\n.speaker-form {\nwidth: 300px;\n}\n\n.form-row {\n  display: flex;\n  flex-direction: column;\n  margin-bottom: 10px;\n}\n\n.form-row input[type='text'], .form-row input[type='number'] {\n  background-color: #FFFFFF;\n  border: 1px solid #D6D9DC;\n  border-radius: 3px;\n  width: 300;\n  padding: 7px;\n  font-size: 14px;\n}\n\n.form-row label {\n  margin-bottom: 5px;\n}\n\n.book_checkbox {\n  display: flex;\n  align-self: center;\n  gap:10px;\n}\n\n.makeTaskGrayed {\n  background-color: lightgray;\n}\n\n#formbody {\n  display: flex;\n  flex-direction: column;\n}\n\n#create-task {\n  align-self: center;\n  margin: 5px;\n  width: 125px;\n  height: 40px;\n  font-size: 1rem;\n  font-weight: bolder;\n  background-color: #4CAF50;\n  border: 1px solid green;\n  border-radius: 10px;    \n}\n\n#book_createbook:hover {\n  box-shadow: 2px 2px #337735; \n}"],sourceRoot:""}]);const c=i},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",o=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),o&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),o&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,o,r,a){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(o)for(var c=0;c<this.length;c++){var A=this[c][0];null!=A&&(i[A]=!0)}for(var s=0;s<n.length;s++){var d=[].concat(n[s]);o&&i[d[0]]||(void 0!==a&&(void 0===d[5]||(d[1]="@layer".concat(d[5].length>0?" ".concat(d[5]):""," {").concat(d[1],"}")),d[5]=a),t&&(d[2]?(d[1]="@media ".concat(d[2]," {").concat(d[1],"}"),d[2]=t):d[2]=t),r&&(d[4]?(d[1]="@supports (".concat(d[4],") {").concat(d[1],"}"),d[4]=r):d[4]="".concat(r)),e.push(d))}},e}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var o=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(o),a="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([a]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,o=0;o<e.length;o++)if(e[o].identifier===n){t=o;break}return t}function o(n,o){for(var a={},i=[],c=0;c<n.length;c++){var A=n[c],s=o.base?A[0]+o.base:A[0],d=a[s]||0,l="".concat(s," ").concat(d);a[s]=d+1;var p=t(l),u={css:A[1],media:A[2],sourceMap:A[3],supports:A[4],layer:A[5]};if(-1!==p)e[p].references++,e[p].updater(u);else{var f=r(u,o);o.byIndex=c,e.splice(c,0,{identifier:l,updater:f,references:1})}i.push(l)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var a=o(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<a.length;i++){var c=t(a[i]);e[c].references--}for(var A=o(n,r),s=0;s<a.length;s++){var d=t(a[s]);0===e[d].references&&(e[d].updater(),e.splice(d,1))}a=A}}},569:n=>{var e={};n.exports=function(n,t){var o=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!o)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");o.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var o="";t.supports&&(o+="@supports (".concat(t.supports,") {")),t.media&&(o+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(o+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),o+=t.css,r&&(o+="}"),t.media&&(o+="}"),t.supports&&(o+="}");var a=t.sourceMap;a&&"undefined"!=typeof btoa&&(o+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(a))))," */")),e.styleTagTransform(o,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}}},e={};function t(o){var r=e[o];if(void 0!==r)return r.exports;var a=e[o]={id:o,exports:{}};return n[o](a,a.exports,t),a.exports}t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var o in e)t.o(e,o)&&!t.o(n,o)&&Object.defineProperty(n,o,{enumerable:!0,get:e[o]})},t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),t.nc=void 0;var o={};(()=>{t.d(o,{$:()=>w});const n=document.querySelector("#projForm"),e=document.querySelector("#addNewProject"),r=document.querySelector("#addProject"),a=document.querySelector("#closeProjForm");function i(){n.style.display="none",n.reset()}let c=1;const A=n=>{const e=c.toString();return c+=1,{title:n,id:e,tasks:[]}};var s=t(379),d=t.n(s),l=t(795),p=t.n(l),u=t(569),f=t.n(u),m=t(565),E=t.n(m),C=t(216),b=t.n(C),g=t(589),y=t.n(g),h=t(426),x={};x.styleTagTransform=y(),x.setAttributes=E(),x.insert=f().bind(null,"head"),x.domAPI=p(),x.insertStyleElement=b(),d()(h.Z,x),h.Z&&h.Z.locals&&h.Z.locals,i(),e.addEventListener("click",(function(){n.style.display="block"})),r.addEventListener("click",(function(){console.log("Hello"),w(),i()})),a.addEventListener("click",i);let B=1;const k=[];function v(n){k.forEach((e=>{e.tasks=e.tasks.filter((e=>e.id!=n.target.parentNode.id))})),n.target.parentNode.remove()}function S(n){k[0].tasks.forEach((e=>{e.id===n.target.parentNode.id&&(e.completed=!e.completed,n.target.parentNode.classList.toggle("makeTaskGrayed"))}))}function w(){(function(){const n=document.querySelector("#pr-title").value,e=A(n);k.push(e)})(),function(){const n=document.querySelector("#project-container");n.textContent="",k.forEach((e=>{if("1"!=e.id){const t=function(n){const e=document.createElement("div");return e.textContent=n.title,e.id=n.id,e.addEventListener("click",(()=>{T(n)})),e}(e);n.appendChild(t)}}))}(),T(k.at(-1))}const T=n=>{const e=document.querySelector("#content");e.className="",e.classList.add(n.id),e.innerHTML='\n<button id="ADDDBUTTOON">ADD BUTTON</button>\n<div id="TASKSSSFORM">\n<label for="task-title">Title</label>\n<input type="text" id="task-title" value = "Project Test" required>\n\n<label for="task-desc">Desc</label>\n<input type="text" id="task-desc" value = "Project Test" required>\n\n<label for="date">dATE:</label>\n<input type="date" id="date" name="birthday" value = "2001-12-12">\n\n<button id="addTask">\n    <span>Add Task</span>\n    <i class="fa-solid fa-plus"></i>\n</button>\n\n<button id="closeTask">\n    <span>CLose Task</span>\n    <i class="fa-solid fa-plus"></i>\n</button>\n<div>',n.tasks.forEach((n=>{const t=document.createElement("div");t.classList.add("taskdiv"),t.id=n.id;const o=document.createElement("div");o.textContent=n.title;const r=document.createElement("div");r.textContent=n.desc;const a=document.createElement("div");a.textContent=n.date,t.appendChild(o),t.appendChild(r),t.appendChild(a);const i=document.createElement("button");i.textContent="Dlt",i.addEventListener("click",v),t.appendChild(i);const c=document.createElement("input");c.id="checked",c.type="checkbox",0==n.completed?c.checked=!1:c.checked=!0,c.addEventListener("click",S),t.appendChild(c),e.appendChild(t)})),document.querySelector("#TASKSSSFORM").style.display="none",document.querySelector("#closeTask").addEventListener("click",(()=>{document.querySelector("#TASKSSSFORM").style.display="none"})),document.querySelector("#ADDDBUTTOON").addEventListener("click",(()=>{console.log("Hi"),document.querySelector("#TASKSSSFORM").style.display="block"})),document.querySelector("#addTask").addEventListener("click",(()=>{(()=>{const n=document.querySelector("#task-title").value,e=document.querySelector("#task-desc").value,t=document.querySelector("#date").value,o=document.querySelector("#content").classList[0],r=((n,e,t,o)=>{const r=B.toString();return B+=1,{title:n,desc:e,id:r,priority:"high",completed:!1,date:t}})(n,e,t);k[0].tasks.push(r),k.forEach((n=>{n.id===o&&"1"!=n.id&&n.tasks.push(r)}))})();const n=document.querySelector("#addTask").parentNode.parentNode.classList[0];console.log(n),k.forEach((e=>{e.id===n&&T(e)}))}))},q=A("Inbox");k.push(q),function(){const n=document.querySelector("#sidebar div");n.id="1",n.addEventListener("click",(()=>{T(k[0])})),T(k[0])}()})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,